// base.js
var oauth = require("oauth")
var error = require("./error.js")
var util  = require("./util.js")

function base(req, res){
	tpl_val = {
		selected: {about: "selected"},
		title: "Tomorrow title, today.",
		content: "Twinoid offer a lot of option for your title. Complete title or from part, from one game or many. With or without icons. Some part require a lot of work to be usable. You might not be aware of other from some game you overlooked. //Choose Your Title// aim to ake it easy to design **your** title. Choose from all discovered part, then track your progress toward your goal."
			
	}
	res.render("index", tpl_val)
}

var login = {
	go: function go(req, res, next){
		req.session.from = req.headers['referer']
		url = util.oauth.getAuthorizeUrl({
			response_type:"code", state:"foobar", access_type: "offline",
			redirect_uri: "http://localhost:3000/back"})
		res.redirect(url)
	},
	back: function back(req, res, next){
		util.oauth.getOAuthAccessToken(req.query.code, {
				grant_type:'authorization_code',
				redirect_uri:'http://localhost:3000/back'
			},function(err, access_token, refresh_token, result){
				// error management
				if(err) return next(new Error(err))
				if(result.error) return next(new error.OAuth(result.error))
				// success
				req.session.access = result
				req.session.access.expire =	new Date(Date.now()+result.expires_in*1000)
				res.redirect(req.session.from)
			}
		)
	},
	refresh: function refresh(req, res, next){
		util.oauth.getOAuthAccessToken(req.session.access.access_token, {
				grant_type:'refresh_token',
				redirect_uri:'http://localhost:3000/back/refresh'
			},function(err, access_token, refresh_token, result){
				console.log(arguments)
				res.render('list.html', {list: arguments})
			}
		)
	}
}

this.setup = function setup(app){
	app.get('/',        base)
	app.get('/login',   login.go)
	app.get('/back',    login.back)
	app.get('/refresh', login.refresh)
	app.get('/session', util.need.auth, function(req, res){
		req.session.bip = "bip"
		tpl_val = {list: req.session}
		res.render("list", tpl_val)
	})
}
